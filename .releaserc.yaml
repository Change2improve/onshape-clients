publish:
  - "@semantic-release/github"
  - "@semantic-release/exec"
plugins:
  - "@semantic-release/commit-analyzer"
  - "@semantic-release/release-notes-generator"
  -   - "@semantic-release/exec"
      - prepareCmd: export ONSHAPE_CLIENT_VERSION=${nextRelease.version} && python build_tools/scripts.py
        publishCmd: export ONSHAPE_CLIENT_VERSION=${nextRelease.version} && ./python/publish.sh



# Semantic release will release all clients even if only one changed. It does this so that all client versions can be
# kept in sync. Unfortunately, this means that the Git history is a bit overlapping, with changes to the Python client,
# for instance, showing up as commits even though you may be interested in only the changes to the Java client.